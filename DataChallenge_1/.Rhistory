production$region = production$state
map = data.frame(lapply(map,
function(variables) {
if (is.character(variables)) {
return(toupper(variables))
} else {
return(variables)
}
}),
stringsAsFactors = FALSE)
poduction = data.frame(lapply(production,
function(variables) {
if (is.character(variables)) {
return(toupper(variables))
} else {
return(variables)
}
}),
stringsAsFactors = FALSE)
map = map_data("state")
production_map = regex_join(map, production, by = "region")
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
map = data.frame(lapply(map,
function(variables) {
if (is.character(variables)) {
return(toupper(variables))
} else {
return(variables)
}
}),
stringsAsFactors = FALSE)
poduction = data.frame(lapply(production,
function(variables) {
if (is.character(variables)) {
return(toupper(variables))
} else {
return(variables)
}
}),
stringsAsFactors = FALSE)
map = map_data("state")
production_map = left_join(map, production, by = "region")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "A")
production_map
map
production
# ggplot(arrests_map, aes(long, lat, group = group))+
#   geom_polygon(aes(fill = Assault), color = "white")+
#   scale_fill_viridis_c(option = "C")
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
map = data.frame(lapply(map$region,
function(variables) {
if (is.character(variables)) {
return(toupper(variables))
} else {
return(variables)
}
}),
stringsAsFactors = FALSE)
poduction = data.frame(lapply(production,
function(variables) {
if (is.character(variables)) {
return(toupper(variables))
} else {
return(variables)
}
}),
stringsAsFactors = FALSE)
map = map_data("state")
production_map = left_join(map, production, by = "region")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "A")
production_map
map
production
# ggplot(arrests_map, aes(long, lat, group = group))+
#   geom_polygon(aes(fill = Assault), color = "white")+
#   scale_fill_viridis_c(option = "C")
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
map$region = data.frame(lapply(map$region,
function(variables) {
if (is.character(variables)) {
return(toupper(variables))
} else {
return(variables)
}
}),
stringsAsFactors = FALSE)
map$region = lapply(map$region, toupper())
map$region = apply(map$region, toupper())
map$region = rapply(map$region, toupper())
map$region = lapply(map$region, toupper())
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
# map$region = lapply(map$region, toupper())
# map$region = data.frame(lapply(map$region,
#                               function(variables) {
#                                 if (is.character(variables)) {
#                                   return(toupper(variables))
#                                 } else {
#                                   return(variables)
#                                 }
#                               }),
#                        stringsAsFactors = FALSE)
# poduction = data.frame(lapply(production,
#                               function(variables) {
#                                 if (is.character(variables)) {
#                                   return(toupper(variables))
#                                 } else {
#                                   return(variables)
#                                 }
#                               }),
#                        stringsAsFactors = FALSE)
map = map_data("state")
production_map = regex_left_join(map, production, by = "region")
install.packages("fuzzyjoin")
install.packages("fuzzyjoin")
install.packages("fuzzyjoin")
install.packages("fuzzyjoin")
knitr::opts_chunk$set(echo = TRUE)
library(fuzzyjoin)
knitr::opts_chunk$set(echo = TRUE)
## load in the required libraries
library(readr)
library(dplyr)
library(ggplot2)
## read in the data
state_milk_production <- read_csv("state_milk_production.csv")
clean_cheese <- read_csv("clean_cheese.csv")
fluid_milk_sales <- read_csv("fluid_milk_sales.csv")
milk_products_facts <- read_csv("milk_products_facts.csv")
milkcow_facts <- read_csv("milkcow_facts.csv")
head(state_milk_production)
clean_cheese %>%
ggplot(aes(x=Year, y=clean_cheese$`Total American Chese`)) +
geom_line(aes(y=clean_cheese$`Total American Chese`, colour="Total American Cheese")) +
geom_line(aes(y=clean_cheese$`Total Italian Cheese`, colour="Total Italian Cheese")) +
geom_line(aes(y=clean_cheese$`Total Natural Cheese`, colour="Total Natural Cheese")) +
geom_line(aes(y=clean_cheese$`Total Processed Cheese Products`, colour="Total Processed Cheese Products")) +
ggtitle('Pounds of Cheese Products Consumption Per Person') +  ## add title
ylab('Pounds of Cheese Product') + ## change y-axis label
xlab('Year') + ## change x-axis label
labs(color = "Type of Cheese")  ## change title of legend
clean_cheese <- clean_cheese %>%
mutate(TotalCheeseConsum = `Total American Chese`+`Total Italian Cheese`+`Total Natural Cheese`+`Total Processed Cheese Products`)
# sum = rowSums(.[1:5])
milk_products_facts <- milk_products_facts %>%
mutate(TotalMilkProdConsump = rowSums(.[2:17]))
milk_cheese_join <- clean_cheese %>%
inner_join(milk_products_facts, by=c('Year'='year'))
milk_cheese_join %>%
ggplot(aes(x=TotalMilkProdConsump, y=TotalCheeseConsum)) +
geom_point(alpha = 0.4, color = "red") +
ggtitle('Total Milk Products Consumption vs Total Cheese Consumption') +  ## add title
ylab('Total Cheese Consumption (lbs/person)') + ## change y-axis label
xlab('Total Milk Products Consumption (lbs/person)')  ## change x-axis label
fluid_milk_sales %>%
filter(milk_type != "Total Production") %>%
ggplot(aes(x = milk_type, y = pounds, fill = milk_type)) +
geom_boxplot() +
scale_y_continuous(trans='log10') +
labs(x = "Milk Type", y="Pounds of milk product per year", title = "Boxplots of Pounds of milk product per year by the Milk Type", fill = "Category of Milk Type")+
theme(legend.position = "bottom")
milkcow_facts %>%
mutate(ration_prop = dairy_ration/avg_price_milk) %>%
ggplot(aes(x = year)) +
geom_col(aes(y = ration_prop, colour = "Ration price/Milk price"), size = 0.5, color = "blue", fill = "lightblue", alpha = 0.6) +
geom_line(aes(y = avg_price_milk*2,
colour = "Average price paid for milk"), size = 1.2) +
geom_line(aes(x = year, y = dairy_ration*2,
colour = "Average price paid for dairy cow rations"),
size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./2, name = "Dollars per Pound")) +
labs(x = "Year", y = "Ration Proportion of Milk Price",
title = "Average price paid for dairy cow rations' proportion of Average price paid for milk",
subtitle = "dollars per pound",
colour = "Line color:") +
theme(legend.position = "bottom") +
scale_color_manual(values = c("#E69F00", "#56B4E9"))
library(fuzzyjoin)
install.packages("fuzzyjoin")
knitr::opts_chunk$set(echo = TRUE)
library(fuzzyjoin)
library(fuzzyjoin)
install.packages("fuzzyjoin")
library(fuzzyjoin)
library(fuzzyjoin)
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
knitr::opts_chunk$set(echo = TRUE)
## load in the required libraries
library(readr)
library(dplyr)
library(ggplot2)
## read in the data
state_milk_production <- read_csv("state_milk_production.csv")
clean_cheese <- read_csv("clean_cheese.csv")
fluid_milk_sales <- read_csv("fluid_milk_sales.csv")
milk_products_facts <- read_csv("milk_products_facts.csv")
milkcow_facts <- read_csv("milkcow_facts.csv")
head(state_milk_production)
clean_cheese %>%
ggplot(aes(x=Year, y=clean_cheese$`Total American Chese`)) +
geom_line(aes(y=clean_cheese$`Total American Chese`, colour="Total American Cheese")) +
geom_line(aes(y=clean_cheese$`Total Italian Cheese`, colour="Total Italian Cheese")) +
geom_line(aes(y=clean_cheese$`Total Natural Cheese`, colour="Total Natural Cheese")) +
geom_line(aes(y=clean_cheese$`Total Processed Cheese Products`, colour="Total Processed Cheese Products")) +
ggtitle('Pounds of Cheese Products Consumption Per Person') +  ## add title
ylab('Pounds of Cheese Product') + ## change y-axis label
xlab('Year') + ## change x-axis label
labs(color = "Type of Cheese")  ## change title of legend
clean_cheese <- clean_cheese %>%
mutate(TotalCheeseConsum = `Total American Chese`+`Total Italian Cheese`+`Total Natural Cheese`+`Total Processed Cheese Products`)
# sum = rowSums(.[1:5])
milk_products_facts <- milk_products_facts %>%
mutate(TotalMilkProdConsump = rowSums(.[2:17]))
milk_cheese_join <- clean_cheese %>%
inner_join(milk_products_facts, by=c('Year'='year'))
milk_cheese_join %>%
ggplot(aes(x=TotalMilkProdConsump, y=TotalCheeseConsum)) +
geom_point(alpha = 0.4, color = "red") +
ggtitle('Total Milk Products Consumption vs Total Cheese Consumption') +  ## add title
ylab('Total Cheese Consumption (lbs/person)') + ## change y-axis label
xlab('Total Milk Products Consumption (lbs/person)')  ## change x-axis label
fluid_milk_sales %>%
filter(milk_type != "Total Production") %>%
ggplot(aes(x = milk_type, y = pounds, fill = milk_type)) +
geom_boxplot() +
scale_y_continuous(trans='log10') +
labs(x = "Milk Type", y="Pounds of milk product per year", title = "Boxplots of Pounds of milk product per year by the Milk Type", fill = "Category of Milk Type")+
theme(legend.position = "bottom")
milkcow_facts %>%
mutate(ration_prop = dairy_ration/avg_price_milk) %>%
ggplot(aes(x = year)) +
geom_col(aes(y = ration_prop, colour = "Ration price/Milk price"), size = 0.5, color = "blue", fill = "lightblue", alpha = 0.6) +
geom_line(aes(y = avg_price_milk*2,
colour = "Average price paid for milk"), size = 1.2) +
geom_line(aes(x = year, y = dairy_ration*2,
colour = "Average price paid for dairy cow rations"),
size = 1.5) +
scale_y_continuous(sec.axis = sec_axis(~./2, name = "Dollars per Pound")) +
labs(x = "Year", y = "Ration Proportion of Milk Price",
title = "Average price paid for dairy cow rations' proportion of Average price paid for milk",
subtitle = "dollars per pound",
colour = "Line color:") +
theme(legend.position = "bottom") +
scale_color_manual(values = c("#E69F00", "#56B4E9"))
library(fuzzyjoin)
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
# map$region = lapply(map$region, toupper())
# map$region = data.frame(lapply(map$region,
#                               function(variables) {
#                                 if (is.character(variables)) {
#                                   return(toupper(variables))
#                                 } else {
#                                   return(variables)
#                                 }
#                               }),
#                        stringsAsFactors = FALSE)
# poduction = data.frame(lapply(production,
#                               function(variables) {
#                                 if (is.character(variables)) {
#                                   return(toupper(variables))
#                                 } else {
#                                   return(variables)
#                                 }
#                               }),
#                        stringsAsFactors = FALSE)
map = map_data("state")
production_map = regex_left_join(map, production, by = "region")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "A")
production_map
map
production
# ggplot(arrests_map, aes(long, lat, group = group))+
#   geom_polygon(aes(fill = Assault), color = "white")+
#   scale_fill_viridis_c(option = "C")
library(fuzzyjoin)
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
# map$region = lapply(map$region, toupper())
# map$region = data.frame(lapply(map$region,
#                               function(variables) {
#                                 if (is.character(variables)) {
#                                   return(toupper(variables))
#                                 } else {
#                                   return(variables)
#                                 }
#                               }),
#                        stringsAsFactors = FALSE)
# poduction = data.frame(lapply(production,
#                               function(variables) {
#                                 if (is.character(variables)) {
#                                   return(toupper(variables))
#                                 } else {
#                                   return(variables)
#                                 }
#                               }),
#                        stringsAsFactors = FALSE)
map = map_data("state")
production_map = regex_join(map, production, by = "region")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "A")
production_map
map
production
# ggplot(arrests_map, aes(long, lat, group = group))+
#   geom_polygon(aes(fill = Assault), color = "white")+
#   scale_fill_viridis_c(option = "C")
library(fuzzyjoin)
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
# map$region = lapply(map$region, toupper())
# map$region = data.frame(lapply(map$region,
#                               function(variables) {
#                                 if (is.character(variables)) {
#                                   return(toupper(variables))
#                                 } else {
#                                   return(variables)
#                                 }
#                               }),
#                        stringsAsFactors = FALSE)
# poduction = data.frame(lapply(production,
#                               function(variables) {
#                                 if (is.character(variables)) {
#                                   return(toupper(variables))
#                                 } else {
#                                   return(variables)
#                                 }
#                               }),
#                        stringsAsFactors = FALSE)
map = map_data("state")
production_map = regex_left_join(map, production, by = "region",ignore_case = TRUE)
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "A")
production_map
map
production
# ggplot(arrests_map, aes(long, lat, group = group))+
#   geom_polygon(aes(fill = Assault), color = "white")+
#   scale_fill_viridis_c(option = "C")
library(fuzzyjoin)
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
map = map_data("state")
production_map = regex_left_join(map, production, by = "region",ignore_case = TRUE)
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "B")
library(fuzzyjoin)
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
map = map_data("state")
production_map = regex_left_join(map, production, by = "region",ignore_case = TRUE)
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c")
```{r,warning=FALSE}
library(fuzzyjoin)
require(maps)
# state_milk_production %>%
#   filter(year >= 2016 & year <= 2017) %>%
#   group_by(region) %>%
#   summarise(milk_produced = sum(milk_produced))
production = state_milk_production %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
map = map_data("state")
production_map = regex_left_join(map, production, by = "region",ignore_case = TRUE)
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "bottom")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "top")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right",legend.box.spacing = 2)
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right",legend.box.spacing = 1)
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right",legend.text = "All-time mild production")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right") +
labs("milk production")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right") +
labs(title = "milk production")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right") +
labs(x = "longitude" , y = "latitude", title = "All-time milk production")
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right") +
labs(x = "longitude" , y = "latitude", title = "All-time milk production",fill = "milk production")
state_milk_production
library(fuzzyjoin)
require(maps)
production = state_milk_production %>%
filter(year >= 1980) %>%
group_by(state) %>%
summarise(milk_produced = sum(milk_produced))
production$region = production$state
map = map_data("state")
production_map = regex_left_join(map, production, by = "region",ignore_case = TRUE)
ggplot(production_map, aes(long,lat,group = group))+
geom_polygon(aes(fill = milk_produced), color = "white")+
scale_fill_viridis_c(option = "c") +
theme(legend.position = "right") +
labs(x = "longitude" , y = "latitude", title = "All-time milk production",fill = "milk production")
